/*
 * Firebase Cloud Messaging
 * Send downstream messages to client apps
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package eu.aily.external.fcm;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import eu.aily.external.fcm.Result;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * Downstream message response body
 */
@ApiModel(description = "Downstream message response body")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-12T12:02:11.741+02:00")
public class Response {
  @SerializedName("multicast_id")
  private BigDecimal multicastId = null;

  @SerializedName("success")
  private BigDecimal success = null;

  @SerializedName("failure")
  private BigDecimal failure = null;

  @SerializedName("canonical_ids")
  private BigDecimal canonicalIds = null;

  @SerializedName("results")
  private List<Result> results = null;

  @SerializedName("message_id")
  private String messageId = null;

  public Response multicastId(BigDecimal multicastId) {
    this.multicastId = multicastId;
    return this;
  }

   /**
   * Unique ID (number) identifying the multicast message.
   * @return multicastId
  **/
  @ApiModelProperty(value = "Unique ID (number) identifying the multicast message.")
  public BigDecimal getMulticastId() {
    return multicastId;
  }

  public void setMulticastId(BigDecimal multicastId) {
    this.multicastId = multicastId;
  }

  public Response success(BigDecimal success) {
    this.success = success;
    return this;
  }

   /**
   * Number of messages that were processed without an error.
   * @return success
  **/
  @ApiModelProperty(value = "Number of messages that were processed without an error.")
  public BigDecimal getSuccess() {
    return success;
  }

  public void setSuccess(BigDecimal success) {
    this.success = success;
  }

  public Response failure(BigDecimal failure) {
    this.failure = failure;
    return this;
  }

   /**
   * Number of messages that could not be processed.
   * @return failure
  **/
  @ApiModelProperty(value = "Number of messages that could not be processed.")
  public BigDecimal getFailure() {
    return failure;
  }

  public void setFailure(BigDecimal failure) {
    this.failure = failure;
  }

  public Response canonicalIds(BigDecimal canonicalIds) {
    this.canonicalIds = canonicalIds;
    return this;
  }

   /**
   * Number of results that contain a canonical registration token. See the [registration overview](https://firebase.google.com/docs/cloud-messaging/android/client#canonical-ids) for more discussion of this topic.
   * @return canonicalIds
  **/
  @ApiModelProperty(value = "Number of results that contain a canonical registration token. See the [registration overview](https://firebase.google.com/docs/cloud-messaging/android/client#canonical-ids) for more discussion of this topic.")
  public BigDecimal getCanonicalIds() {
    return canonicalIds;
  }

  public void setCanonicalIds(BigDecimal canonicalIds) {
    this.canonicalIds = canonicalIds;
  }

  public Response results(List<Result> results) {
    this.results = results;
    return this;
  }

  public Response addResultsItem(Result resultsItem) {
    if (this.results == null) {
      this.results = new ArrayList<Result>();
    }
    this.results.add(resultsItem);
    return this;
  }

   /**
   * Get results
   * @return results
  **/
  @ApiModelProperty(value = "")
  public List<Result> getResults() {
    return results;
  }

  public void setResults(List<Result> results) {
    this.results = results;
  }

  public Response messageId(String messageId) {
    this.messageId = messageId;
    return this;
  }

   /**
   * The topic message ID when FCM has successfully received the request and will attempt to deliver to all subscribed devices.
   * @return messageId
  **/
  @ApiModelProperty(value = "The topic message ID when FCM has successfully received the request and will attempt to deliver to all subscribed devices.")
  public String getMessageId() {
    return messageId;
  }

  public void setMessageId(String messageId) {
    this.messageId = messageId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Response response = (Response) o;
    return Objects.equals(this.multicastId, response.multicastId) &&
        Objects.equals(this.success, response.success) &&
        Objects.equals(this.failure, response.failure) &&
        Objects.equals(this.canonicalIds, response.canonicalIds) &&
        Objects.equals(this.results, response.results) &&
        Objects.equals(this.messageId, response.messageId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(multicastId, success, failure, canonicalIds, results, messageId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Response {\n");
    
    sb.append("    multicastId: ").append(toIndentedString(multicastId)).append("\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    failure: ").append(toIndentedString(failure)).append("\n");
    sb.append("    canonicalIds: ").append(toIndentedString(canonicalIds)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("    messageId: ").append(toIndentedString(messageId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

